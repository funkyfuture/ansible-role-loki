- set_fact:
    loki_download_base_url: "https://github.com/grafana/loki/releases/download/v{{ loki_version }}"
    loki_binaries: ["loki"]

- set_fact:
    # possibly overridden in tasks/local_download.yml
    loki_archive_src: "{{ loki_download_base_url }}"

- set_fact:
    loki_binaries: ["loki", "logcli"]
  when: loki_install_logcli

- name: create loki system group
  group:
    name: "{{ loki_system_group }}"
    system: true
    state: present

- name: create loki system user
  user:
    name: "{{ loki_system_user }}"
    system: true
    shell: "/usr/sbin/nologin"
    group: "{{ loki_system_group }}"
    createhome: false

- name: get current loki version
  shell: loki --version | head -n1 | cut -d " " -f 3
  register: current_loki_version
  changed_when: false

- block:
  - name: download files to localhost
    include_tasks:
      file: local_download.yml
    when: loki_distribute_binaries_via_localhost
    loop: "{{ loki_binaries }}"
  - include_tasks: install.yml
    loop: "{{ loki_binaries }}"
  when: current_loki_version.stdout != loki_version

- name: pre-create loki folders
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ loki_system_user }}"
    group: "{{ loki_system_group }}"
  when: loki_directories|length>0
  loop: "{{ loki_directories }}"

#- name: deploy loki alerts
#  template:
#    src: "alert.rules.j2"
#    dest: "{{ loki_alerts_directory }}/ansible_managed.rules"
#    owner: "{{ loki_system_user }}"
#    group: "{{ loki_system_group }}"
#    mode: 0640
#    validate: "{{ _prometheus_binary_install_dir }}/promtool check rules %s"
#  when:
#    - loki_alert_rules != []
#  notify:
#    - restart loki

- name: configure loki
  template:
    src: loki.yml.j2
    dest: /etc/loki.yml
    owner: "{{ loki_system_user }}"
    group: "{{ loki_system_group }}"
    mode: og=r
  notify:
    - restart loki

- name: create systemd service unit
  template:
    src: loki.service.j2
    dest: /etc/systemd/system/loki.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart loki

- name: Enable and unmask loki service
  systemd:
    daemon_reload: true
    name: loki
    state: started
    enabled: yes
    masked: no
