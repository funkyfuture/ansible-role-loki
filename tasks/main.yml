- name: create loki system group
  group:
    name: "{{ loki_system_group }}"
    system: true
    state: present

- name: create loki system user
  user:
    name: "{{ loki_system_user }}"
    system: true
    shell: "/usr/sbin/nologin"
    group: "{{ loki_system_group }}"
    createhome: false

- name: get current loki version
  shell: loki --version | head -n1 | cut -d " " -f 3
  register: current_loki_version
  changed_when: false

- block:
    - name: download and unzip loki binary
      unarchive:
        src: https://github.com/grafana/loki/releases/download/v{{ loki_version }}/loki-linux-amd64.zip
        remote_src: yes
        dest: /usr/local/bin
    - name: rename new loki binary
      command: mv /usr/local/bin/loki-linux-amd64 /usr/local/bin/loki
    - name: set loki binary ownership and permissions
      file:
        path: /usr/local/bin/loki
        owner: "{{ loki_system_user }}"
        group: "{{ loki_system_group }}"
        mode: ug=rx
      notify: enable and restart loki
  when: current_loki_version.stdout != loki_version

- name: pre-create loki folders
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ loki_system_user }}"
    group: "{{ loki_system_group }}"
  when: loki_directories|length>0
  loop: "{{ loki_directories }}"

#- name: deploy loki alerts
#  template:
#    src: "alert.rules.j2"
#    dest: "{{ loki_alerts_directory }}/ansible_managed.rules"
#    owner: "{{ loki_system_user }}"
#    group: "{{ loki_system_group }}"
#    mode: 0640
#    validate: "{{ _prometheus_binary_install_dir }}/promtool check rules %s"
#  when:
#    - loki_alert_rules != []
#  notify:
#    - restart loki

- name: configure loki
  template:
    src: loki.yml.j2
    dest: /etc/loki.yml
    owner: root
    group: root
    mode: 0644
  notify:
    - restart loki

- name: create systemd service unit
  template:
    src: loki.service.j2
    dest: /etc/systemd/system/loki.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart loki

- name: Enable and unmask loki service
  systemd:
    daemon_reload: true
    name: loki
    state: started
    enabled: yes
    masked: no
